name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:


  #Publish the Azure DevOps extension 
  deployAzureDevOps:
    runs-on: windows-latest
    #needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: .NET Publish Azure DevOps Extension
      run: dotnet publish DevOpsMetrics/DevOpsMetrics.AzureDevOpsExtension/DevOpsMetrics.AzureDevOpsExtension.csproj --configuration Release   
    - name: Copy files
      run: |
        echo "${GITHUB_WORKSPACE}"
        xcopy /E /I "DevOpsMetrics\DevOpsMetrics.AzureDevOpsExtension\bin\Release\netcoreapp3.1\publish\wwwroot" "${GITHUB_WORKSPACE}\output"
        cd "${GITHUB_WORKSPACE}\output"
        dir
    - name: Fix version
      run: |
        $filePath = "${GITHUB_WORKSPACE}\output\vss-extension.json"
        $a = Get-Content $filePath -raw | ConvertFrom-Json
        Write-Host $a
        #$a.update | % {if($_.version -eq 'test1'){$_.version=3.0}}
        #$a | ConvertTo-Json -depth 32| set-content 'D:\temp\mytestBis.json'
    - name: Build Extension
      run: |
        npm install -g tfx-cli
        cd "${GITHUB_WORKSPACE}\output"
        tfx extension create --manifest-globs vss-extension.json --rev-version
        #tfx extension samsmithnz create --token "${{ secrets.AzureDevOpsPATToken }}"
        #tfx extension publish --help 
    - name: Check files
      run: |
        cd "${GITHUB_WORKSPACE}\output"
        dir
    - name: Upload Azure DevOps extension build artifacts back to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: azuredevopsextensionpackage
        path: ${GITHUB_WORKSPACE}\output\SamSmithNZ.high-performing-devops-metrics-0.1.3.vsix
    - name: Upload Azure DevOps extension build artifacts back to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: azuredevopsextensionpackage
        path: ${GITHUB_WORKSPACE}\output
    - name: Upload Azure DevOps extension build artifacts back to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: azuredevopsextensionpackage
        path: output



  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    
    #Build and test service   
    - name: Variable Substitution appsettings file for tests
      uses: microsoft/variable-substitution@v1
      with:
        files: 'DevOpsMetrics/DevOpsMetrics.Tests/appsettings.json'
      env:
        AppSettings.AzureDevOpsPatToken: "${{ secrets.AzureDevOpsPATToken }}"
        AppSettings.GitHubClientId: "${{ secrets.GitHubClientId }}" 
        AppSettings.GitHubClientSecret: "${{ secrets.GitHubClientSecret }}" 
        AppSettings.AzureStorageAccountAccessKey: "${{ secrets.AzureStorageAccessKey }}" 
    - name: view appsettings file after substitution
      run: Get-Content -Path "DevOpsMetrics/DevOpsMetrics.Tests/appsettings.json"
    - name: Run automated unit and integration tests
      run: dotnet test DevOpsMetrics/DevOpsMetrics.Tests/DevOpsMetrics.Tests.csproj --configuration Release --logger trx --collect "Code coverage" --settings:./DevOpsMetrics/DevOpsMetrics.Tests/CodeCoverage.runsettings --  

    #Publish dotnet objects
    - name: .NET Publish Web Service
      run: dotnet publish DevOpsMetrics/DevOpsMetrics.Service/DevOpsMetrics.Service.csproj --configuration Release
    - name: .NET Publish Website
      run: dotnet publish DevOpsMetrics/DevOpsMetrics.Web/DevOpsMetrics.Web.csproj --configuration Release
    - name: .NET Publish Function
      run: dotnet publish DevOpsMetrics/DevOpsMetrics.NightlyProcessor.Function/DevOpsMetrics.NightlyProcessor.Function.csproj --configuration Release      
    - name: .NET Publish Azure DevOps Extension
      run: dotnet publish DevOpsMetrics/DevOpsMetrics.AzureDevOpsExtension/DevOpsMetrics.AzureDevOpsExtension.csproj --configuration Release    
      
    #Publish build artifacts to GitHub
    - name: Upload web service build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: serviceapp
        path: DevOpsMetrics/DevOpsMetrics.Service/bin/Release/netcoreapp3.1/publish
    - name: Upload website build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: webapp
        path: DevOpsMetrics/DevOpsMetrics.Web/bin/Release/netcoreapp3.1/publish
    - name: Upload function build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: functionapp
        path: DevOpsMetrics/DevOpsMetrics.NightlyProcessor.Function/bin/Release/netcoreapp3.1/publish
    - name: Upload Azure DevOps extension build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: azuredevopsextensionapp
        path: DevOpsMetrics/DevOpsMetrics.AzureDevOpsExtension


  #Deploy the artifacts to Azure
  deploy:
    runs-on: windows-latest
    needs: build    
    #if: github.ref == 'refs/heads/master'    
    steps:        
    # Login with the secret SP details
    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP }}  
    
    #Download the artifacts from GitHub
    - name: Download serviceapp artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: serviceapp 
    - name: Download webapp artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: webapp 
    - name: Download webapp artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: functionapp
    
    #Deploy service, website, and function to Azure
    - name: Deploy web service to Azure WebApp
      uses: Azure/webapps-deploy@v1
      with:
        app-name: devopsmetrics-prod-eu-service
        package: serviceapp  
    - run: az webapp config appsettings set --name "devopsmetrics-prod-eu-service" --resource-group "devopsmetrics" --settings "AppSettings:AzureDevOpsPatToken=${{ secrets.AzureDevOpsPATToken }}" "AppSettings:GitHubClientId=${{ secrets.GitHubClientId }}" "AppSettings:GitHubClientSecret=${{ secrets.GitHubClientSecret }}" "AppSettings:AzureStorageAccountAccessKey=${{ secrets.AzureStorageAccessKey }}" 
    - name: Deploy website to Azure WebApp
      uses: Azure/webapps-deploy@v1
      with:
        app-name: devopsmetrics-prod-eu-web
        package: webapp 
    - run: az webapp config appsettings set --name devopsmetrics-prod-eu-web --resource-group "devopsmetrics" --settings "AppSettings:AzureDevOpsPatToken=${{ secrets.AzureDevOpsPATToken }}" "AppSettings:GitHubClientId=${{ secrets.GitHubClientId }}" "AppSettings:GitHubClientSecret=${{ secrets.GitHubClientSecret }}"  
    - name: Deploy function to Azure WebApp
      uses: Azure/webapps-deploy@v1
      with:
        app-name: devopsmetrics-prod-eu-function
        package: functionapp 
    - run: az webapp config appsettings set --name "devopsmetrics-prod-eu-function" --resource-group "devopsmetrics" --settings "AppSettings:AzureDevOpsPatToken=${{ secrets.AzureDevOpsPATToken }}" "AppSettings:GitHubClientId=${{ secrets.GitHubClientId }}" "AppSettings:GitHubClientSecret=${{ secrets.GitHubClientSecret }}" "AppSettings:AzureStorageAccountAccessKey=${{ secrets.AzureStorageAccessKey }}" "AppSettings:WebServiceURL=https://devopsmetrics-prod-eu-service.azurewebsites.net/" 
